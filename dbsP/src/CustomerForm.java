
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.text.*;
import java.util.Random;
import java.util.Scanner;
import java.text.ParseException;
import javax.swing.JOptionPane;
import java.util.Random;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mahe
 */
public class CustomerForm extends javax.swing.JFrame {

    /**
     * Creates new form CustomerForm
     */
   
    public CustomerForm() {
        initComponents();
        setBackground(Color.BLACK);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        roomtype = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        checkin = new com.toedter.calendar.JDateChooser();
        checkout = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);

        jLabel3.setText("Check-In Date:");

        jLabel4.setText("Check-Out Date:");

        jButton1.setText("Check Availability");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Room Type: ");

        roomtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single Bedroom", "Double Bedroom", "Luxury Suite", " " }));
        roomtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomtypeActionPerformed(evt);
            }
        });

        jButton2.setText("Home Page");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(roomtype, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkin, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(checkout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(roomtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(checkin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addComponent(checkout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public int countrooms()
    {
        int k=0;
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn1=(Connection)DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","student") ;
            Statement stmt=conn1.createStatement();
            String t1=roomtype.getSelectedItem().toString();
            String str = "select count(*) from room group by room_type having room_type='"+t1+"'";
            ResultSet rs=stmt.executeQuery(str);
            
            
            String s;
            while (rs.next())
            {
                s=rs.getString("count(*)");
                k=Integer.parseInt(s);
            }
            
            
        } catch (Exception e)
        {
            System.out.println(e);
        }
        return k;
    }
    
    public int availablerooms()
    {
        int t=0;
        try {
            int i=countrooms();
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn1=(Connection)DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","student") ;
            Statement stmt=conn1.createStatement();
            String t1=roomtype.getSelectedItem().toString();
            String str1="select count(room_type) from cbooking group by room_type having room_type='"+t1+"'";
            
            ResultSet rs=stmt.executeQuery(str1);
            String s1;
            rs=stmt.executeQuery(str1);
            while (rs.next())
            {
                s1=rs.getString("count(room_type)");
                t=Integer.parseInt(s1);
                
            } 
            
        
        } catch (Exception e)
        {
            System.out.println(e);
        }
        return t;
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int i=availablerooms();
            int i1=countrooms();
            
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn1=(Connection)DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","student") ;
            Statement stmt=conn1.createStatement();
            String t1=roomtype.getSelectedItem().toString();
            String str="select * from cbooking where room_type = '" + t1 + "' ";
            ResultSet rs=stmt.executeQuery(str);
            int y=0;
            java.util.Date date1;
            java.util.Date date2;
            DateFormat formatter=new SimpleDateFormat("dd/MM/yyyy");
            if (i==i1)
            {
                System.out.println(i);
                System.out.println(i1);
                JOptionPane.showMessageDialog(this,"Room type is currently full, checking for the entered dates..");
                String s1,s2;
           
                while (rs.next())
                {
                    
                    
                    date1=rs.getDate("check_in");
                   
                     s1=formatter.format(checkin.getDate());
                    System.out.println(s1);
                   s2=formatter.format(checkout.getDate());
                    
                    java.util.Date d1=formatter.parse(s1);
                    //java.util.Date d2=formatter.format(d1);
                    System.out.println(d1);
                    
                    //System.out.println(d1);
                    date2=rs.getDate("check_out");
                    if (checkin.getDate().after(date1) && checkin.getDate().before(date2) && checkout.getDate().after(date1) && checkout.getDate().before(date2))
                    {
                        System.out.println ("ok)");
                       continue;
                    }
                    
                    else {
                        
                       y=1;
                       JOptionPane.showMessageDialog(this, "Available!");
                       int cid = 1600000+(int) (Math.random()*16);
                       JOptionPane.showMessageDialog (this, "Booking ID:" + cid);
                       String str3="insert into customer (id) values ('"+cid+"')";
                       int m=stmt.executeUpdate(str3);
                       String lm=roomtype.getName();
                       String str2="insert into cbooking values ('"+cid+"',to_date('"+s1+"','DD/MM/YYYY'),to_date('"+s2+"','DD/MM/YYYY'),'"+lm+"')";
                       int l=stmt.executeUpdate(str2);
                       System.out.println("Updated table");
                    
                        break;
                    }
                }
                
                if (y==0)
                {
                    JOptionPane.showMessageDialog(this, "Not available");
                    checkin.setDate(null );
                    checkout.setDate(null);
                }
                
            }
            else 
            {
               int a=JOptionPane.showConfirmDialog(null, "The room type is available, would you like to proceed with the booking? ", "Booking Confirmation", JOptionPane.YES_NO_CANCEL_OPTION);
               if (a==JOptionPane.YES_OPTION)
               {
                   String s1=formatter.format(checkin.getDate());
                    System.out.println(s1);
                   String s2=formatter.format(checkout.getDate());
                   JOptionPane.showMessageDialog(this,"Room is booked.");
                   int cid = 1600000+(int) (Math.random()*16);
                       JOptionPane.showMessageDialog (this, "Booking ID:" + cid);
                       String str3="insert into customer (id) values ('"+cid+"')";
                       int m=stmt.executeUpdate(str3);
                       String lm=roomtype.getSelectedItem().toString();
                       System.out.println(lm);
                       String str2="insert into cbooking values ('"+cid+"',to_date('"+s1+"','DD/MM/YYYY'),to_date('"+s2+"','DD/MM/YYYY'),'"+lm+"')";
                       int l=stmt.executeUpdate(str2);
                       System.out.println("Updated table");
               }

            }
             
        
        } catch (Exception e)
        {
            System.out.println(e);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void roomtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomtypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomtypeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        this.setVisible(false);
        new Form1().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

   // while (rs.next())
        //    {
          //      String d1=rs.getString("A");
         //       String d2=rs.getString("B");
        //        String d3=rs.getString("C");
         //   }
            
      //      rs.close();
    //        stmt.close();
    //        conn1.close();
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerForm().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser checkin;
    private com.toedter.calendar.JDateChooser checkout;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox roomtype;
    // End of variables declaration//GEN-END:variables
}
